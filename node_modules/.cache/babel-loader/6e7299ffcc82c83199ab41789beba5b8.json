{"ast":null,"code":"var _jsxFileName = \"/Users/jathu/Documents/dev/git/chatbox/src/App.jsx\";\nimport React, { useRef, useState } from \"react\";\nimport \"./global.scss\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBRsY3uU6Sxr-tZYXgwDGn-lN4yM58nwU0\",\n  authDomain: \"chatbox-authentication.firebaseapp.com\",\n  projectId: \"chatbox-authentication\",\n  storageBucket: \"chatbox-authentication.appspot.com\",\n  messagingSenderId: \"408104309600\",\n  appId: \"1:408104309600:web:3d7a0fc25d88b71d698405\",\n  measurementId: \"G-Q5FPW0B4MZ\"\n});\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction App() {\n  const [user] = useAuthState(auth);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"headedr\",\n    SignOut: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, user ? /*#__PURE__*/React.createElement(ChatRoom, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 24\n    }\n  }) : /*#__PURE__*/React.createElement(SignIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 39\n    }\n  })));\n}\n\nfunction SignIn() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"sign-in\",\n    onClick: () => {\n      auth.signInWithPopup(new firebase.auth.GoogleAuthProvider());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Sign in with Google\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Do not violate the community guidelines or you will be banned for life!\"));\n}\n\nfunction SignOut() {\n  return auth.currentUser && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"sign-out\",\n    onClick: () => auth.signOut(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Sign Out\");\n}\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection(\"messages\");\n  const query = messagesRef.orderBy(\"createdAt\").limit(25);\n  const [messages] = useCollectionData(query, {\n    idField: \"id\"\n  });\n  const [formValue, setFormValue] = useState(\"\");\n\n  const sendMessage = async e => {\n    e.preventDefault();\n    const {\n      uid,\n      photoURL\n    } = auth.currentUser;\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    });\n    setFormValue(\"\");\n    dummy.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messageList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, messages && messages.map(msg => /*#__PURE__*/React.createElement(ChatMessage, {\n    key: msg.id,\n    message: msg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    ref: dummy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: formValue,\n    onChange: e => setFormValue(e.target.value),\n    placeholder: \"say something nice\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: !formValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \"\\uD83D\\uDD4A\\uFE0F\")));\n}\n\nfunction ChatMessage(props) {\n  const {\n    text,\n    uid,\n    photoURL\n  } = props.message;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: uid === auth.currentUser.uid ? \"message sent\" : \"message received\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: photoURL || \"https://api.adorable.io/avatars/23/abott@adorable.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, text)));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jathu/Documents/dev/git/chatbox/src/App.jsx"],"names":["React","useRef","useState","firebase","useAuthState","useCollectionData","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","App","user","SignIn","signInWithPopup","GoogleAuthProvider","SignOut","currentUser","signOut","ChatRoom","dummy","messagesRef","collection","query","orderBy","limit","messages","idField","formValue","setFormValue","sendMessage","e","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","id","target","value","ChatMessage","props","message"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport \"./global.scss\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBRsY3uU6Sxr-tZYXgwDGn-lN4yM58nwU0\",\n  authDomain: \"chatbox-authentication.firebaseapp.com\",\n  projectId: \"chatbox-authentication\",\n  storageBucket: \"chatbox-authentication.appspot.com\",\n  messagingSenderId: \"408104309600\",\n  appId: \"1:408104309600:web:3d7a0fc25d88b71d698405\",\n  measurementId: \"G-Q5FPW0B4MZ\",\n});\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction App() {\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <div className=\"headedr\" SignOut />\n      </header>\n\n      <section>{user ? <ChatRoom /> : <SignIn />}</section>\n    </div>\n  );\n}\n\nfunction SignIn() {\n  return (\n    <>\n      <button\n        className=\"sign-in\"\n        onClick={() => {\n          auth.signInWithPopup(new firebase.auth.GoogleAuthProvider());\n        }}\n      >\n        Sign in with Google\n      </button>\n      <p>\n        Do not violate the community guidelines or you will be banned for life!\n      </p>\n    </>\n  );\n}\n\nfunction SignOut() {\n  return (\n    auth.currentUser && (\n      <button className=\"sign-out\" onClick={() => auth.signOut()}>\n        Sign Out\n      </button>\n    )\n  );\n}\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection(\"messages\");\n  const query = messagesRef.orderBy(\"createdAt\").limit(25);\n\n  const [messages] = useCollectionData(query, { idField: \"id\" });\n\n  const [formValue, setFormValue] = useState(\"\");\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL,\n    });\n\n    setFormValue(\"\");\n    dummy.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  return (\n    <>\n      <div className=\"messageList\">\n        {messages &&\n          messages.map((msg) => <ChatMessage key={msg.id} message={msg} />)}\n\n        <span ref={dummy}></span>\n      </div>\n\n      <form onSubmit={sendMessage}>\n        <input\n          value={formValue}\n          onChange={(e) => setFormValue(e.target.value)}\n          placeholder=\"say something nice\"\n        />\n\n        <button type=\"submit\" disabled={!formValue}>\n          🕊️\n        </button>\n      </form>\n    </>\n  );\n}\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n\n  return (\n    <>\n      <div\n        className={\n          uid === auth.currentUser.uid ? \"message sent\" : \"message received\"\n        }\n      >\n        <img\n          src={\n            photoURL || \"https://api.adorable.io/avatars/23/abott@adorable.png\"\n          }\n        />\n        <p>{text}</p>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}